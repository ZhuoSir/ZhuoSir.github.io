<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Phenix</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-11-14T14:10:21.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>陈卓</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Servlet文件上传</title>
    <link href="http://yoursite.com/2016/11/14/Servlet%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%EF%BC%88fileupload%E5%BC%80%E6%BA%90%E6%96%B9%E5%BC%8F%EF%BC%89/"/>
    <id>http://yoursite.com/2016/11/14/Servlet文件上传（fileupload开源方式）/</id>
    <published>2016-11-14T14:10:00.000Z</published>
    <updated>2016-11-14T14:10:21.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Servlet文件上传"><a href="#Servlet文件上传" class="headerlink" title="Servlet文件上传"></a>Servlet文件上传</h1><p>Servlet一般是在表单提交时候，通过Post请求将文件上传到服务器。上传的文件可以使任何文件，包括图片，文档等。这篇博客暂时只介绍通过Apache的开源包commons-fileupload的方式。首先导入两个必须的jar包：commons-fileupload，commons-io。我选用的版本是1.3.2和2.5。  </p>
<h2 id="文件上传表单"><a href="#文件上传表单" class="headerlink" title="文件上传表单"></a>文件上传表单</h2><p>注意:  </p>
<ul>
<li>表单提交的<code>method</code>方法必须是<code>post</code>,不能使用<code>get</code>方法。  </li>
<li>表单<code>enctype</code>的属性设置为<code>multipart/form-data</code>。</li>
<li><p>上传单个文件，您应该使用单个带有属性 <code>type=&quot;file&quot;</code> 的 <code>&lt;input .../&gt;</code>标签。为了允许多个文件上传，请包含多个 name 属性值不同的 input 标签。输入标签具有不同的名称属性的值。浏览器会为每个 input 标签关联一个浏览按钮。    </p>
<pre><code>&lt;form method=&quot;post&quot; action=&quot;/TomcatTest/        UploadServlet&quot; enctype=&quot;multipart/form-data&quot;&gt;
选择一个文件:
&lt;input type=&quot;file&quot; name=&quot;uploadFile&quot; /&gt;
&lt;br/&gt;&lt;br/&gt;
&lt;input type=&quot;submit&quot; value=&quot;上传&quot; /&gt;
&lt;/form&gt;  
</code></pre></li>
</ul>
<p>后端servlet  </p>
<pre><code>    @WebServlet(name = &quot;uploadServlet&quot;, urlPatterns = &quot;/servlet/upload.do&quot;)
public class UploadServlet extends HttpServlet {

    private static final long serialVersionID = 1L;
    private static final String UPLOAD_DIRECTORY = &quot;upload&quot;;
    private static final int MEMORY_THRESHOLD = 1024 * 1024 * 3;  // 3MB
    private static final int MAX_FILE_SIZE = 1024 * 1024 * 40; // 40MB
    private static final int MAX_REQUEST_SIZE = 1024 * 1024 * 50; // 50MB

    @Override
    protected void doGet(HttpServletRequest req, HttpServletResponse resp)
        throws ServletException, IOException {
        doPost(req, resp);
    }

    @Override
    protected void doPost(HttpServletRequest req, HttpServletResponse resp)
            throws ServletException, IOException {
        //通过commons-fileupload包上传
        uploadByCommonsJar(req, resp);
        getServletContext().getRequestDispatcher(&quot;/show.jsp&quot;)
                .forward(req, resp);
    }


     private void uploadByCommonsJar(HttpServletRequest req, HttpServletResponse resp)
                throws IOException {
        if (!ServletFileUpload.isMultipartContent(req)) {                           // 检测是否为多媒体上传
            PrintWriter writer = resp.getWriter();                                  // 如果不是则停止
            writer.println(&quot;Error: 表单必须包含 enctype=multipart/form-data&quot;);
            writer.flush();
            return;
        }
        DiskFileItemFactory factory = new DiskFileItemFactory();
        factory.setSizeThreshold(MEMORY_THRESHOLD);                                 // 设置内存临界值 - 超过后将产生临时文件并存储于临时目录中
        factory.setRepository(new File(System.getProperty(&quot;java.io.tmpdir&quot;)));      // 设置临时存储目录
        ServletFileUpload upload = new ServletFileUpload(factory);
        upload.setFileSizeMax(MAX_FILE_SIZE);                                       // 设置最大文件上传值
        upload.setSizeMax(MAX_REQUEST_SIZE);                                        // 设置最大请求值
        String uploadPath = getServletContext().getRealPath(&quot;./&quot;)                   // 获取上传路径
                + File.separator + UPLOAD_DIRECTORY;

           File uploadDir = new File(uploadPath);
        if (!uploadDir.exists()) {
            uploadDir.mkdirs();
        }

        try {
            List&lt;FileItem&gt; fileItems = upload.parseRequest(req);                    // 解析请求的内容提取文件数据
            if (fileItems != null &amp;&amp; !fileItems.isEmpty()) {
                for (FileItem item : fileItems) {
                    String fileName = new File(item.getName()).getName();
                    String filePath = uploadPath + File.separator + fileName;
                    File storeFile = new File(filePath);
                    System.out.println(filePath);
                    item.write(storeFile);
                    req.setAttribute(&quot;message&quot;, &quot;文件上传成功&quot;);
                    }
                }
        } catch (Exception e) {
                    e.printStackTrace();
                    req.setAttribute(&quot;message&quot;, e.getMessage());
            }
    }
}    
</code></pre><p>注意：我采用的是servlet3.0的注释方法配置。所以没有在web.xml里进行配置。接着在相应的show.jsp里显示上传成功的结果就可以了。show.jsp略。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Servlet文件上传&quot;&gt;&lt;a href=&quot;#Servlet文件上传&quot; class=&quot;headerlink&quot; title=&quot;Servlet文件上传&quot;&gt;&lt;/a&gt;Servlet文件上传&lt;/h1&gt;&lt;p&gt;Servlet一般是在表单提交时候，通过Post请求将文件上传到服务
    
    </summary>
    
      <category term="Servlet" scheme="http://yoursite.com/Categories/Servlet/"/>
    
    
      <category term="文件上传" scheme="http://yoursite.com/Tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>MarkDown 基本语法学习（第一篇）</title>
    <link href="http://yoursite.com/2016/11/13/MarkDown-%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0%EF%BC%88%E7%AC%AC%E4%B8%80%E7%AF%87%EF%BC%89/"/>
    <id>http://yoursite.com/2016/11/13/MarkDown-基本语法学习（第一篇）/</id>
    <published>2016-11-13T14:32:00.000Z</published>
    <updated>2016-11-13T15:29:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果一段文字被设为标题，只要在段首加上<code>#</code>就可以，例如：  </p>
<pre><code># 一级标题  
## 二级标题
### 三级标题
</code></pre><p>以此类推；</p>
<h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;列表主要分为两种，有序和无序。  </p>
<h2 id="有序"><a href="#有序" class="headerlink" title="有序"></a>有序</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有序只要在前面加上数字即可，例如：  </p>
<pre><code>1. 你好
2. hello
3. 哦哈呦
</code></pre><h2 id="无序"><a href="#无序" class="headerlink" title="无序"></a>无序</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;无序列表前面加上<code>*</code>符号就可以了。例如：  </p>
<pre><code>* 1
* 2
* 3
</code></pre><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在文中引用一处文字或者段落，可以在文本前面加上&gt;符号（大于号）。  </p>
<pre><code>&gt; 这里是引用。
</code></pre><p>效果如下</p>
<blockquote>
<p>这里是引用  </p>
</blockquote>
<h1 id="图片和链接"><a href="#图片和链接" class="headerlink" title="图片和链接"></a>图片和链接</h1><h2 id="图片格式"><a href="#图片格式" class="headerlink" title="图片格式"></a>图片格式</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;插入链接和图片的语法类似，区别在一个<code>!</code>号</p>
<pre><code>![](){ImgCap}{/ImgCap} //图片
[]() //链接  
</code></pre><p>例如：  </p>
<pre><code>[baidu]    (http://baidu.com)
![img](http://m2.quanjing.com/2m/fod_liv002/fo-11171537.jpg)
</code></pre><h1 id="粗体与斜体"><a href="#粗体与斜体" class="headerlink" title="粗体与斜体"></a>粗体与斜体</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;粗体和斜体的区别在于<em>符号的数量，粗体用两个 *</em> 号包裹，斜体只需要一个。  </p>
<pre><code>**粗体**
*斜体*
</code></pre><p>效果如下：<br><strong>粗体</strong><br><em>斜体</em></p>
<h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;表格比较麻烦，就用一个例子来说明吧，直接看例子就明白了。  </p>
<pre><code>| 姓名        | 年龄           | 性别  |
| ---------|:-------------:| -----:|
| 张三      | 22             | 男 |
| 李四      | 22                |   女 |
| 王二麻子   | 22            |    难 |
</code></pre><table>
<thead>
<tr>
<th>姓名</th>
<th style="text-align:center">年龄</th>
<th style="text-align:right">性别</th>
</tr>
</thead>
<tbody>
<tr>
<td>张三</td>
<td style="text-align:center">22</td>
<td style="text-align:right">男</td>
</tr>
<tr>
<td>李四</td>
<td style="text-align:center">22</td>
<td style="text-align:right">女</td>
</tr>
<tr>
<td>王二麻子</td>
<td style="text-align:center">22</td>
<td style="text-align:right">难</td>
</tr>
</tbody>
</table>
<p><code>:</code>符号代表对齐，居左代表左对齐，居右代表右对齐。左竖线一定要对齐。  </p>
<h1 id="代码框"><a href="#代码框" class="headerlink" title="代码框"></a>代码框</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;代码框实现起来也很简单。只需要``将代码包裹起来就可以，这个符号一般在键盘ESC下面的那个按键。使用tab键可以进行缩进。  </p>
<h1 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h1><p>分割线的语法只需要三个<code>*</code>即可。例如：<code>***</code></p>
<hr>
<h1 id="其他常规"><a href="#其他常规" class="headerlink" title="其他常规"></a>其他常规</h1><p>markdown没有空格语法，一般就是<code>&amp;nbsp;</code>即可。如果想要换行，一般是<code>space + space + enter</code>;  </p>
<p>今天先写到这里吧。see U next time！</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;标题&quot;&gt;&lt;a href=&quot;#标题&quot; class=&quot;headerlink&quot; title=&quot;标题&quot;&gt;&lt;/a&gt;标题&lt;/h1&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;如果一段文字被设为标题，只要在段首加上&lt;co
    
    </summary>
    
      <category term="MarkDown学习" scheme="http://yoursite.com/Categories/MarkDown%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="MarkDown" scheme="http://yoursite.com/Tags/MarkDown/"/>
    
  </entry>
  
  <entry>
    <title>第一篇博客</title>
    <link href="http://yoursite.com/2016/11/13/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2016/11/13/第一篇博客/</id>
    <published>2016-11-13T04:17:28.000Z</published>
    <updated>2016-11-13T13:05:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;本人第一篇博客，以前一直想写，但是因为懒一直没有动笔。写博客的好处在于总结经验，加深记忆。但是我一直认为自己记忆力超出常人（事实也的确如此），所以很多乱七八糟的都存在脑子里，但是时间久了有个不好的地方，知识点太嘈杂。尤其是软件，必须要形成整个系统知识网络，所以开始写博客。<br>&nbsp;&nbsp;&nbsp;&nbsp;从今天开始，我会将自己的生活感受，工作上获取到的知识，尽量的写入博客里。开源分享，这是入门极客应该做的事儿。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;本人第一篇博客，以前一直想写，但是因为懒一直没有动笔。写博客的好处在于总结经验，加深记忆。但是我一直认为自己记忆力超出常人（事实也的确如此），所以很多乱七八糟的都存在脑子里，但是时间久了有个不好的地方，知识点太嘈杂。尤其是软件
    
    </summary>
    
    
      <category term="闲扯" scheme="http://yoursite.com/Tags/%E9%97%B2%E6%89%AF/"/>
    
  </entry>
  
</feed>
